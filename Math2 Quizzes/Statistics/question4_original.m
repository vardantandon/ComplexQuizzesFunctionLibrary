%Last Updated: 17/09/2015
%Created By: Avinash Javaji under supervision of Dr. Pilar Garcia Souto
%UCL Department: Medical Physics and Bioengineering

file=fopen('question4.xml','w'); 
fprintf(file, quiz_start()); %xml initialization code

for i=1:1:1
    
    %Calculations
    N = randi([3, 20]);
    T = randi([5, 50]) / 10;
    mean = 1 / (2*N + 1);
    variance = mean + (1 - exp(-1*(N+1)*T))/((2*N + 1)*(1 - exp(-2*N*T))) - mean^2;
    
    %fprintf('N: %d, mean: %d, s: %d, fromVal: %d, toVal: %d', n, mean, s, fromVal, toVal);
    
    %Embedded components string generation
    numStringMean = cloze_numerical(mean, 0.01, 'Good job!', 'Incorrect, try again', 3, 6);
    numStringMeanInfi = cloze_numerical(0, 0, 'Good job!', 'Incorrect, try again', 3, 6);
    numStringVariance = cloze_numerical(variance, 0.01, 'Good job!', 'Incorrect, try again', 3, 6);
    numStringVarianceInfi = cloze_numerical(0, 0, 'Good job!', 'Incorrect, try again', 3, 6);
    %numStringTo = cloze_numerical(sprintf('%0.4g', toVal), 0.01, 'Good job!', 'Incorrect, try again');
    
    %Question string joining
    questionString = strcat( ...
        'Consider the signal x(t) defined as:<br>', ...
        '$$ x(t) = \\begin{cases} -e^t, & t<0 \\\\ e^{-t}, & t\\geq0 \\end{cases} $$<br><br>', ...
        'The expression for the discrete signal x[n] obtained by sampling x(t) with period T, namely x[n] = x(nT) would be given by:<br>', ...
        '$$ x[n] = x(nT) = \\begin{cases} -e^{nT}, & n<0 \\\\ e^{-nT}, & n\\geq0 \\end{cases} $$<br><br>', ...
        'Use T =&nbsp;', num2str(T), '&nbsp;and N =&nbsp;', num2str(N), '&nbsp;.<br><br>', ...
        'a) If n &isin; [-N,N], with N being a positive integer, calculate the mean value of x[n]:<br>', ...
        '$$ \\Large \\bar{x} $$ =&nbsp;', numStringMean, '<br><br>', ...
        'b) If n &isin; [-N,N], with N being a positive integer, calculate the variance of x[n]:<br>', ...
        '$$ Var(x) $$ =&nbsp;', numStringVariance, '<br><br>', ...
        'c) Calculate the mean and variance of x[n] when N&rarr;<span style="font-size:24px;">&infin;</span>:<br>', ...
        '$$ \\Large \\bar{x} $$ =&nbsp;', numStringMeanInfi, '<br>', ...
        '$$ Var(x) $$ =&nbsp;', numStringVarianceInfi, '<br><br>', ...
        '<p style="font-size: 0px">$$</p>' ... This causes the latex to be non/image, hence much clearer
    );

    feedbackString = strcat( ...
        'a) Average:<br>Sum of terms <br>', ...
        '= $$ \\large - e^{(-', num2str(N), ')T} - e^{-(', num2str(N-1), ')T} - ... - e^{-0T} ', ...
        '+ ... + e^{-', num2str(N-1), 'T} + e^{-', num2str(N), 'T} $$ <br>', ...
        '= $$- \\frac{1}{e^{', num2str(N), 'T}} - \\frac{1}{e^{', num2str(N-1), 'T}} - ... - 1 ', ...
        '+ ... + \\frac{1}{e^{', num2str(N-1), 'T}} + \\frac{1}{e^{', num2str(N), 'T}} $$<br>', ...
        '= 1<br>', ...
        'No. of terms <br>= $$ 2N + 1 $$<br>', ...
        '$$ \\large \\bar{x} = \\frac{\\text{Sum of terms}}{\\text{No. of terms}} = \\frac{1}{2N + 1} = $$&nbsp;', sprintf('%0.3g', mean),'<br><br>', ...
        'b) The variance of x[n] is given by:<br>', ...
        '$$ Var(x) = \\large \\bar{x^2} - {\\bar{x}}^2 $$<br>', ...
        '$$ = \\large \\frac{1}{2N + 1}(1 + 2\\sum_{{n}={1}}^{N} e^{-2nT} ) - \\frac{1}{(2N + 1)^2}$$<br>', ...
        '$$ = \\large \\frac{1}{2N + 1} + \\frac{2}{2N+1}\\frac{1-e^{-2NT}}{(2N + 1)(1-e^{-2NT})} - \\frac{1}{(2N + 1)^2}$$<br>', ...
        '$$ = $$&nbsp;', sprintf('%0.3g', variance), '<br><br>', ...
        'c) The mean and variance of x[n] as N&rarr;<span style="font-size:24px;">&infin;</span> are:<br>', ...
        '$$ \\lim_{N \\to \\infty} \\bar{x} = \\lim_{N \\to \\infty} \\frac{1}{2N + 1} = 0 $$<br>', ...
        '$$ \\lim_{N \\to \\infty} Var(x) $$<br>', ...
        '$$ = \\lim_{N \\to \\infty} [\\frac{1}{2N + 1} + \\frac{1-e^{-2(N+1)T}}{(2N + 1)(1-e^{-2NT})} - \\frac{1}{(2N + 1)^2}] = 0 $$<br><br>', ...
        '<p style="font-size: 0px">$$</p>' ... This causes the latex to be non/image, hence much clearer
    );
    
    %Complete question XML code generation
    xmlCode = question_cloze(i, ...
        'Descrete Stats Q1', ... 
        questionString, ...
        feedbackString, ...
        '', ...
        '', ...
        '', ...
        '');
    
    %Output
    fprintf(file, xmlCode);
    
end
fprintf(file, quiz_end()); %xml closing code
fclose(file);